{
    "doc": [
        "This test does",
        "Runs a mocked Template Provider",
        "Runs the pool with a custom config file",
        "Runs a mocked Job Negotiator",
        "Mocks a mining device (without mining) that connects to a pool",
        "Opens a standard channel with the pool",
        "Checks that a NewMiningJob and a NewPrevHash are received",
        "These last two messages are built in base of the NewTemplate and NewPrevHash provided by the mocked TP",
        "Successfully submits a share that is a solution for the template supplied by the mocked TP",
        "Checks that a second SetNewPrevHash is provided by the pool for the next round of mining",
        "Generates code coverage report for the pool"
    ],
    "mining_messages": [
        {
            "message": {
                "type": "OpenStandardMiningChannel",
                "request_id": 89,
                "user_identity": "",
                "nominal_hash_rate": 10,
                "max_target": [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
            },
            "id": "open_standard_mining_channel"
        },
        {
            "message": {
                "type": "SubmitSharesStandard",
                "channel_id": 1,
                "sequence_number": 0,
                "job_id": 0,
                "nonce": 174,
                "ntime": 1671116742,
                "version": 536870912
            },
            "id": "submit_shares"
        }
    ],
    "frame_builders": [
        {
            "type": "automatic",
            "message_id": "test/message-generator/messages/common_messages.json::setup_connection_mining_hom"
        },
        {
            "type": "automatic",
            "message_id": "open_standard_mining_channel"
        },
        {
            "type": "automatic",
            "message_id": "submit_shares"
        }
    ],
    "actions": [
        {
            "message_ids": ["setup_connection_mining_hom"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x01"
                }
            ],
            "actiondoc": "This action sends a SetupConnection and check that receives a message type 0x01, that is SetupConnectionSuccess"
        },
        {
            "message_ids": ["open_standard_mining_channel"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_field",
                    "value": [
                        "MiningProtocol",
                        "OpenStandardMiningChannelSuccess",
                        [
                            [
                                "request_id",
                                {"U32": 89}
                            ]
                        ]
                    ]
                },
                {
                    "type": "match_message_type",
                    "value": "0x15"
                },
                {
                    "type": "match_message_type",
                    "value": "0x20"
                }
            ],
            "actiondoc": "This action sends OpenStandardMiningChannel to the pool and checks that the reply is OpenStandardMiningChannelSuccess, NewMiningJob, and SetNewPrevHash"
        },
        {
            "message_ids": ["submit_shares"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x1c"
                }
             ],
            "actiondoc": "This action sends the message SubmitSharesStandard to the pool and checks that the pool replies with SubmitSharesStandard.Success"
        },
        {
            "message_ids": [],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x20"
                }
             ],
            "actiondoc": "This action checks that the messsage SetNewPrevhash is received"
      }
    ],
    "setup_commands": [
       {
           "command": "cargo",
           "args": [
                       "run",
                       "../../test/message-generator/mock/template-provider-mock0.json"
           ],
           "conditions": {
               "WithConditions": {
                   "conditions": [
                       {
                           "output_string": "Running `target/debug/message_generator_sv2 ../../test/message-generator/mock/template-provider-mock0.json`",
                           "output_location": "StdErr",
                           "condition": true
                       }
                   ],
                   "timer_secs": 240,
                   "warn_no_panic": false
               }
           }
       },
       {
            "command": "cargo",
            "args": [
                        "run",
                        "../../../test/message-generator/mock/template-provider-mock0.json"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Running `target/debug/message_generator_sv2 ../../../test/message-generator/mock/template-provider-mock0.json`",
                            "output_location": "StdErr",
                            "condition": true
                        }
                    ],
                    "timer_secs": 240,
                    "warn_no_panic": false
                }
            }
        },
        {
            "command": "cargo",
            "args": [
                        "llvm-cov",
                        "--no-report",
                        "run",
                        "-p",
                        "pool_sv2",
                        "--",
                        "-c",
                        "./test/config/pool-mock-tp.toml"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Listening for encrypted connection on: 127.0.0.1:34254",
                            "output_location": "StdOut",
                            "condition": true
                        }
                    ],
                    "timer_secs": 240,
                    "warn_no_panic": false
                }
            }
        },
       {
           "command": "cargo",
           "args": [
                       "run",
                       "../../test/message-generator/mock/job-negotiator-mock.json"
           ],
           "conditions": {
               "WithConditions": {
                   "conditions": [
                       {
                           "output_string": "Running `target/debug/message_generator_sv2 ../../test/message-generator/mock/job-negotiator-mock.json`",
                           "output_location": "StdErr",
                           "condition": true
                       }
                   ],
                   "timer_secs": 240,
                   "warn_no_panic": false
               }
           }
       }
    ],
    "execution_commands": [
    ],
    "cleanup_commands": [
        {
            "command": "pkill",
            "args":  ["-f", "pool_sv2", "-SIGINT"],
            "conditions": "None"
        },
        {
            "command": "cargo",
            "args": [
                    "llvm-cov",
                    "--ignore-filename-regex",
                    "utils/|experimental/|protocols/",
                    "--cobertura",
                    "--output-path",
                    "target/pool-sri-test-1-standard.xml",
                    "report"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Finished report saved to ",
                            "output_location": "StdErr",
                            "condition": true
                        }
                    ],
                    "timer_secs": 240,
                    "warn_no_panic": false
                }
            }
        }
    ],
    "role": "client",
    "downstream": {
        "ip": "127.0.0.1",
        "port": 34254,
        "pub_key": "2di19GHYQnAZJmEpoUeP7C3Eg9TCcksHr23rZCC83dvUiZgiDL"
    }
}
